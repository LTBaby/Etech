<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>